// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/example/login": {
            "post": {
                "description": "通过账号和密码登录，生成 Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "示例登录功能",
                "parameters": [
                    {
                        "description": "登录参数",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ExampleLoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功时如下结构；错误时 code 非 0, message 包含错误信息, 不包含 data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.Body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ExampleLoginResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/example/register": {
            "post": {
                "description": "录入账号、密码和邮箱地址",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "示例注册功能",
                "parameters": [
                    {
                        "description": "注册表单",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ExampleRegisterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功时如下结构；错误时 code 非 0, message 包含错误信息, 不包含 data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/server.Body"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ExampleRegisterResp"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ExampleLoginReq": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.ExampleLoginResp": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.ExampleRegisterReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.ExampleRegisterResp": {
            "type": "object",
            "properties": {
                "example": {
                    "$ref": "#/definitions/entity.Example"
                }
            }
        },
        "entity.Example": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "salt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "server.Body": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Go Template DDD 示例 API 文档",
	Description:      "这是一个使用 Gin 和 Swagger 生成 API 文档的示例。",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
